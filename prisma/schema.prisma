generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  name                  String
  email                 String        @unique
  isVerified            Boolean       @default(false)
  identificationImgLink String?
  isActive              Boolean       @default(true)
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  role                  Role          @default(user)
  cashAmount            BigInt?
  idNumber              String?
  idType                String        @default("cedula")
  phoneNumber           String?
  userId                String        @id
  Investment            Investement[]
}

model Project {
  title                         String        @unique
  address                       String
  description                   String?
  projectValueTotal             BigInt?
  projectValueActual            BigInt?
  media                         String[]
  documents                     String[]
  createdAt                     DateTime      @default(now())
  updatedAt                     DateTime      @updatedAt
  accountServicesCost           BigInt?
  basicEquipmentAndTestingCost  BigInt?
  bathrooms                     Int
  bedrooms                      Int
  builder                       String?
  cetificatesSNandRCost         BigInt?
  city                          String
  commonAreas                   String[]
  companiesIncorporationCost    BigInt?
  contigenciesFee               BigInt?
  country                       String
  department                    String
  endIncomeDate                 DateTime?
  finishingCost                 BigInt?
  incomeFromValuationAnnualCash Float?
  legalCost                     BigInt?
  projectLinks                  String?
  propertyAppraisal             BigInt?
  propertyType                  PropertyType
  rentalYieldsAnnualCash        Float?
  searchAndAdvertisingFee       BigInt?
  squareMeters                  Int
  startIncomeDate               DateTime?
  studyTitleCost                BigInt?
  totalPropertyCost             BigInt?
  transactionCost               BigInt?
  status                        String        @default("inactivo")
  projectId                     Int           @id @default(autoincrement())
  minInvestmentAmount           Int
  Investment                    Investement[]
}

model Transaction {
  amount        BigInt
  createdAt     DateTime    @default(now())
  transactionId Int         @id @default(autoincrement())
  investmentId  Int
  investment    Investement @relation(fields: [investmentId], references: [investmentId])
}

model Investement {
  amount             BigInt
  transaction_status String
  createdAt          DateTime      @default(now())
  investmentId       Int           @id @default(autoincrement())
  userId             String
  projectId          Int
  project            Project       @relation(fields: [projectId], references: [projectId])
  user               User          @relation(fields: [userId], references: [userId])
  Transaction        Transaction[]
}

enum Role {
  admin
  user
}

enum PropertyType {
  viviendaDeInteresSocial
  viviendaDeInteresPrioritario
}
